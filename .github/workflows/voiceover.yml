name: Generate Voiceover from Story

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-voiceover:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install edge-tts nest_asyncio

      - name: Determine next version number
        run: |
          VERSION_FILE="counter.txt"
          if [ -f "$VERSION_FILE" ]; then
            VERSION=$(cat "$VERSION_FILE")
            VERSION=$((VERSION + 1))
          else
            VERSION=1
          fi
          echo $VERSION > "$VERSION_FILE"

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using version: $VERSION"

      - name: Generate Voiceover
        run: |
          INPUT_FILE="Script/s${VERSION}.txt"
          OUTPUT_FILE="Audio/a${VERSION}.mp3"

          echo "Looking for script: $INPUT_FILE"
          if [ ! -f "$INPUT_FILE" ]; then
            echo "Error: Script $INPUT_FILE not found!"
            exit 1
          fi

          mkdir -p Audio

          if [ -f "$OUTPUT_FILE" ]; then
            echo "Removing old audio: $OUTPUT_FILE"
            rm "$OUTPUT_FILE"
          fi

          python3 - <<EOF
          import nest_asyncio
          import asyncio
          import edge_tts
          import os

          VOICE = "ru-RU-DmitryNeural"
          INPUT_FILE = "Script/s${VERSION}.txt"
          OUTPUT_FILE = "Audio/a${VERSION}.mp3"

          with open(INPUT_FILE, "r") as f:
              TEXT = f.read()

          async def amain():
              communicate = edge_tts.Communicate(TEXT, VOICE)
              await communicate.save(OUTPUT_FILE)

          nest_asyncio.apply()
          asyncio.run(amain())
          EOF

      - name: Save version to yt.txt
        run: |
          echo "${VERSION}" > yt.txt

      - name: Set up Git identity
        run: |
          git config --global user.name "cowboycode9"
          git config --global user.email "cowboycode9@outlook.com"

      - name: Commit and push files
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git pull origin main --rebase
          git add Audio/*.mp3 yt.txt counter.txt
          git commit -m "Generated voiceover for version v${VERSION}" || echo "No changes to commit"
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git HEAD:main
